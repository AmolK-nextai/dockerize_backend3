name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [lts/*]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use LTS version of Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build and push Docker images
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.CICDNODE }}
        run: |
          docker login -u $DOCKERHUB_USERNAME -p $CICDNODE
          docker build -t amolknexaitech/apigateway:${{ github.sha }} .
          docker push amolknexaitech/apigateway:${{ github.sha }}
          # Repeat the above steps for other images
          docker login -u $DOCKERHUB_USERNAME -p $CICDNODE
          docker build -t amolknexaitech/potdargroupbackend:${{ github.sha }} .
          docker push amolknexaitech/potdargroupbackend:${{ github.sha }}
          docker login -u $DOCKERHUB_USERNAME -p $CICDNODE
          docker build -t amolknexaitech/amolknexaitech/dynamicbackend:${{ github.sha }} .
          docker push amolknexaitech/amolknexaitech/dynamicbackend:${{ github.sha }}
          docker login -u $DOCKERHUB_USERNAME -p $CICDNODE
          docker build -t amolknexaitech/amolknexaitech/randomwebsite:${{ github.sha }} .
          docker push amolknexaitech/amolknexaitech/randomwebsite:${{ github.sha }}

      - name: Deploy microservices
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.CICDNODE }}
        run: |
          # Deploy microservice using Docker Compose or Kubernetes, depending on your setup
          # Example:
          # docker-compose up -d
          # or
          # kubectl apply -f deployment.yaml

      - name: Run tests
        run: npm test
